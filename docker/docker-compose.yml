version: "3"

services:
  db:
    # Please ensure the postgres-client's major version in the backend image is kept in
    # sync with this major version so pg_dump remains compatible.
    image: postgres:11.3
    environment:
      - POSTGRES_USER=${DATABASE_USER:-base_django}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-wl4%50md}
      - POSTGRES_DB=${DATABASE_NAME:-base_django}
    networks:
      local:
    ports:
      - ${DATABASE_PORT:-5432}:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:6.0
    networks:
      local:

  backend:
    build:
      dockerfile: ./docker/Dockerfile
      context: ../
    image: base_django_backend:latest
    environment:
      - PUBLIC_BACKEND_URL=${PUBLIC_BACKEND_URL:-http://127.0.0.1:8000}
      - DATABASE_USER=${DATABASE_USER:-base_django}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-wl4%50md}
      - DATABASE_NAME=${DATABASE_NAME:-base_django}
      - DATABASE_HOST=${DATABASE_HOST:-db}
      - EMAIL_SMTP=${EMAIL_SMTP:-hienaloso98@gmail.com}
      - EMAIL_SMTP_HOST=${EMAIL_SMTP_HOST:-smtp.gmail.com}
      - EMAIL_SMTP_PORT=${EMAIL_SMTP_PORT:-587}
      - EMAIL_SMTP_USER=${EMAIL_SMTP_USER}
      - EMAIL_SMTP_PASSWORD=${EMAIL_SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL:-hienaloso98@gmail.com}
    ports:
      - "${HOST_PUBLISH_IP:-0.0.0.0}:${BACKEND_PORT:-8000}:8000"
      - "5000:5000"
    volumes:
      - ../:/code
    env_file:
      - ../.env
    depends_on:
      - db
      - redis
    networks:
      local:
    command: sh -c "python manage.py runserver 0.0.0.0:8000"

  celery:
    image: base_django_backend:latest
    env_file:
      - ../.env
    environment:
      - DEBUG=False
    build:
      dockerfile: ./docker/Dockerfile
      context: ../
    command: celery -A config worker -E -l INFO -Q celery
    depends_on:
      - backend
      - redis
      - db
    networks:
      local:


volumes:
  pgdata:

networks:
  local:
    driver: bridge
